{
  "name": "TruBuzz Challenge",
  "tagline": "Create a  Laravel homestead docker container for your development env.",
  "body": "# TruBuzz Challenge\r\n\r\n## Install docker && docker compose\r\n\r\nDocker環境基本安裝:\r\n\r\n* install docker (https://docs.docker.com/installation/ubuntulinux/)\r\n```shell \r\ncurl -sSL https://get.docker.com/ | sh\r\n```\r\n* install docker compose (https://docs.docker.com/compose/install/)\r\n```shell\r\ncurl -L https://github.com/docker/compose/releases/download/1.6.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\r\n```\r\n\r\n## 下載考題/解答環境\r\n\r\n請下載到家目錄\r\n\r\n```shell\r\n$ cd ~\r\n$ git@github.com:Easter1021/homestead-docker.git\r\n$ cd homestead-docker\r\n$ docker build -t shincoder/homestead .\r\n\r\n# 將會花費少許時間安裝\r\n```\r\n\r\n## 建立環境\r\n\r\n以下指令將會安裝2個容器：web container 和 mysql container，並且在 mysql container 建立 trubuzz 資料庫和具有存取權限的使用者( id: trubuzz / pw: challenge)。\r\n\r\n```shell\r\n$ cd ~/homestead-docker\r\n$ docker-machine start default\r\n$ docker-machine env\r\nexport DOCKER_TLS_VERIFY=\"1\"\r\nexport DOCKER_HOST=\"tcp://192.168.99.100:2376\"\r\nexport DOCKER_CERT_PATH=\"/Users/gexu/.docker/machine/machines/default\"\r\nexport DOCKER_MACHINE_NAME=\"default\"\r\n# Run this command to configure your shell: \r\n# eval $(docker-machine env)\r\n```\r\n\r\n```shell\r\n$ eval $(docker-machine env)\r\n$ docker-compose up -d\r\nCreating homesteaddocker_mysql_1\r\nCreating homesteaddocker_web_1\r\n```\r\n\r\n現在你可以使用下列指令進入 web container \r\n\r\n```shell\r\n$ ssh -p 2222 homestead@192.168.99.100\r\nThe authenticity of host '[192.168.99.100]:2222 ([192.168.99.100]:2222)' can't be established.\r\nECDSA key fingerprint is SHA256:VzI0s5Bt1m0FT0DsuCdLczCC3GhfR5LRtzOyXIY/0HQ.\r\nAre you sure you want to continue connecting (yes/no)? yes\r\nhomestead@b45492bf2d7f:~$\r\n\r\n# 其中 192.168.99.100 是 docker-machine env 的 DOCKER_HOST\r\n# b45492bf2d7f 則是 web container 的代號\r\n```\r\n\r\n## 初始化環境(下載後第1次設定即可)\r\n\r\n```shell\r\n$ cd ~/homestead-docker/apps/trubuzz_challenge\r\n$ php -r \"copy('.env.example', '.env');\"\r\n$ Illuminate\\Foundation\\ComposerScripts::postInstall\r\n$ php artisan optimize\r\n$ php artisan key:generate\r\n$ composer install\r\n```\r\n\r\n## 設定 virtual host\r\n\r\n在本機端編輯 /etc/hosts 加入 virtual host (以下為 Mac OS 環境)\r\n\r\n```shell\r\n$ sudo vi /etc/hosts\r\n##\r\n# Host Database\r\n#\r\n# localhost is used to configure the loopback interface\r\n# when the system is booting.  Do not change this entry.\r\n##\r\n127.0.0.1       localhost\r\n255.255.255.255 broadcasthost\r\n::1             localhost\r\nfe80::1%lo0     localhost\r\n\r\n192.168.99.100  trubuzz.challenge.test  # <--加入這行\r\n```\r\n\r\n## 這樣應該就可以測試了\r\n\r\n現在，請在網址打入 [http://trubuzz.challenge.test:8000/](http://trubuzz.challenge.test:8000/) 開始測試。\r\n\r\n## API Document\r\n\r\n網站需要一些API，因此在路由前綴加上 `/api` 即回傳的格式為json；\r\n\r\n像是 `/api/users` 和 `/users`，前者取得 json，後者取得 html\r\n\r\n另外，關於 1-5 如果在API有數十甚至上百的情況下，\r\n\r\n在沒有 cache 的情況下，將使用 `分頁` 進行效能管理。\r\n\r\n### 建立User\r\n\r\n```shell\r\n// 回傳 json 格式\r\ncurl -X POST http://trubuzz.challenge.test:8000/api/users\r\n     -F \"username=Charles\"\r\n     -F \"email=mufasa.hsu@gmail.com\"\r\n     \r\n// 回傳 json 格式 (format: 1, true, True)\r\ncurl -X POST http://trubuzz.challenge.test:8000/api/users\r\n     -F \"format=True\"\r\n     -F \"username=Charles\"\r\n     -F \"email=mufasa.hsu@gmail.com\"\r\n\r\n// 回傳 html 格式\r\ncurl -X POST http://trubuzz.challenge.test:8000/users\r\n     -H \"Content-Type: application/x-www-form-urlencoded\"\r\n     -H \"Accept: text/html\" \r\n     -F \"username=Charles\"\r\n     -F \"email=mufasa.hsu@gmail.com\"\r\n```\r\n回傳JSON內容\r\n\r\n```#!json\r\n{\r\n  \"username\": \"Charles\"\r\n  \"email\": \"mufasa.hsu@gmail.com\"\r\n  \"created_time\": {\r\n    \"date\": \"2016-03-26 13:23:38.000000\"\r\n    \"timezone_type\": 3\r\n    \"timezone\": \"UTC\"\r\n  }\r\n  \"id\": 1\r\n}\r\n```\r\n\r\n### 查詢所有User\r\n\r\n```shell\r\ncurl http://trubuzz.challenge.test:8000/api/users\r\n```\r\n回傳JSON內容\r\n\r\n```#!json\r\n{\r\n  \"total\": 11\r\n  \"per_page\": 15\r\n  \"current_page\": 1\r\n  \"last_page\": 1\r\n  \"next_page_url\": null\r\n  \"prev_page_url\": null\r\n  \"from\": 1\r\n  \"to\": 11\r\n  \"data\": [11]\r\n    0:  {\r\n      \"id\": 1\r\n      \"username\": \"Charles\"\r\n      ....\r\n```\r\n\r\n<small style=\"color: red;\">(回傳內容以下將不會解釋說明!)</small>\r\n\r\n<small style=\"color: red;\">(回傳內容以下將不會解釋說明!!)</small>\r\n\r\n<small style=\"color: red;\">(回傳內容以下將不會解釋說明!!!)</small>\r\n\r\n### 查詢個別User\r\n\r\n```shell\r\ncurl http://trubuzz.challenge.test:8000/api/users/1\r\n```\r\n\r\n### 查詢個別User所擁有的Book\r\n\r\n```shell\r\ncurl http://trubuzz.challenge.test:8000/api/users/1/books\r\n```\r\n\r\n### 為User添加Book\r\n\r\n```shell\r\ncurl -X POST http://trubuzz.challenge.test:8000/api/books\r\n     -F \"user_id=1\"\r\n     -F \"title=Marvel\"\r\n     -F \"description=Marvel Worldwide Inc., commonly referred to as Marvel Comics and formerly Marvel Publishing, Inc. and Marvel Comics Group, is an American publisher of comic books and related media.\"\r\n```\r\n\r\n### 為User移除Book\r\n\r\n```shell\r\ncurl –X DELETE http://trubuzz.challenge.test:8000/api/users/1/books/1\r\n```\r\n\r\n### 建立Book (不要加 user_id )\r\n\r\n```shell\r\ncurl -X POST http://trubuzz.challenge.test:8000/api/books\r\n     -F \"title=Marvel\"\r\n     -F \"description=Marvel Worldwide Inc., commonly referred to as Marvel Comics and formerly Marvel Publishing, Inc. and Marvel Comics Group, is an American publisher of comic books and related media.\"\r\n```\r\n\r\n### 刪除Book\r\n\r\n```shell\r\ncurl –X DELETE http://trubuzz.challenge.test:8000/api/books/1\r\n```\r\n\r\n### 修改Book\r\n\r\n```shell\r\ncurl -X PUT http://trubuzz.challenge.test:8000/api/books/1\r\n     -F \"title=DC Comics\"\r\n     -F \"description=DC Comics, Inc. is an American comic book publisher. It is the publishing unit of DC Entertainment,[2] a company of Warner Bros. Entertainment, which itself is owned by Time Warner.\"\r\n```\r\n\r\n### 查詢所有Book\r\n\r\n```shell\r\ncurl http://trubuzz.challenge.test:8000/api/books\r\n```\r\n\r\n### 查詢個別Book\r\n\r\n```shell\r\ncurl http://trubuzz.challenge.test:8000/api/books/1\r\n```\r\n\r\n### 查詢個別Book被誰所擁有\r\n\r\n```shell\r\ncurl http://trubuzz.challenge.test:8000/api/books/1/user\r\n```\r\n\r\n## 網頁介面 (關於新書通知)\r\n\r\n關於通知有許多作法，此系統使用的是 \"cmgmyr/messenger\": \"~2.0\"\r\n\r\n每位用戶都可以在這個頁面模擬登入，登入後可以關注其它用戶。\r\n\r\n有2個情況，系統會發通知訊息給用戶：\r\n\r\n1. 是用戶被關注時\r\n2. 是關注的人發表新書時，追隨者會收到通知\r\n\r\n登入此頁以操作功能 [http://trubuzz.challenge.test:8000/users](http://trubuzz.challenge.test:8000/users)\r\n\r\n![用戶列表](https://raw.githubusercontent.com/Easter1021/homestead-docker/master/images/users.png)\r\n\r\n點擊右上角「訊息」即可查看消息列表\r\n\r\n![訊息列表](https://raw.githubusercontent.com/Easter1021/homestead-docker/master/images/attention.png)\r\n\r\n## 結語\r\n\r\n此系統執行 TruBuzz Challenge 大多數的任務項目，在本次挑戰中針對考題1~5並沒有太多的問題，像是 Laravel 的路由、中介層、回應、Eloquent ORM、cmgmyr/messenger。關於 API 的技巧上，我使用 `Route Prefixes` 來判斷系統需回傳的內容。\r\n\r\n對於較不熟 `Docker` 也花費許多時間去學習了解並且找到較適合 Laravel homestead 的 docker 環境，我想這是本測驗中學習最多的部份。有關 Ansible 交付 Docker 在此系統中並沒有完成，但我找到 IBM 發佈的 [Best Practice](https://www.evernote.com/shard/s32/nl/3685155/2212cd74-adc5-4198-949f-2eac334a8ceb/?csrfBusterToken=U%3D383b23%3AP%3D%2F%3AE%3D153b606a5e1%3AS%3D1bf67f81e19d79faaa16713cc7804520)，目前正努力學習了解中。希望未來有機會可以學習公司的用法。\r\n\r\n本次依照 git flow 的標準來管理版本，請參照下圖：\r\n\r\n![git flow best practice](https://raw.githubusercontent.com/Easter1021/homestead-docker/master/images/git-model@2x.png)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}